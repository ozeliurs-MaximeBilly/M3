/* EXO1 */
SELECT * FROM USER_TAB_COLUMNS WHERE TABLE_NAME='PROF';


/* EXO2 */
SELECT OBJECT_NAME FROM USER_OBJECTS;

/* EXO3 */
SELECT constraint_name FROM USER_CONSTRAINTS;

/* EXO4 */
SELECT * FROM USER_CONSTRAINTS 
WHERE TABLE_NAME IN (
    SELECT TABLE_NAME FROM USER_TAB_COLUMNS WHERE DATA_TYPE='NUMBER');

/* EXO5 */
SELECT CONSTRAINT_NAME, USER_TAB_COLUMNS.COLUMN_NAME, DATA_TYPE 
FROM USER_CONS_COLUMNS, USER_TAB_COLUMNS 
WHERE USER_CONS_COLUMNS.COLUMN_NAME = USER_TAB_COLUMNS.COLUMN_NAME
AND DATA_TYPE='NUMBER';

/* EXO6 */
SELECT CONSTRAINT_NAME, USER_TAB_COLUMNS.COLUMN_NAME, DATA_TYPE 
FROM USER_CONS_COLUMNS, USER_TAB_COLUMNS 
WHERE USER_CONS_COLUMNS.COLUMN_NAME = USER_TAB_COLUMNS.COLUMN_NAME
AND USER_CONS_COLUMNS.TABLE_NAME = USER_TAB_COLUMNS.TABLE_NAME
AND USER_CONS_COLUMNS.COLUMN_NAME IN (SELECT COLUMN_NAME FROM USER_TAB_COLUMNS WHERE DATA_TYPE = 'NUMBER');

/* EXO7 */
SELECT * FROM USER_CONSTRAINTS
WHERE CONSTRAINT_TYPE = 'P';

/* EXO8 */
SELECT AT1.COLUMN_NAME, AT1.TABLE_NAME, AT2.COLUMN_NAME, AT2.TABLE_NAME 
FROM USER_TAB_COLUMNS AT1, USER_TAB_COLUMNS AT2 
WHERE AT1.COLUMN_NAME = AT2.COLUMN_NAME 
AND AT1.TABLE_NAME <> AT2.COLUMN_NAME;

/* EXO9 */
SELECT AT1.COLUMN_NAME, AT1.TABLE_NAME, AT2.COLUMN_NAME, AT2.TABLE_NAME 
FROM USER_TAB_COLUMNS AT1, USER_TAB_COLUMNS AT2 
WHERE AT1.COLUMN_NAME = AT2.COLUMN_NAME 
AND AT1.TABLE_NAME < AT2.COLUMN_NAME;

/* LES VUES */
CREATE VIEW ETUDM AS SELECT * FROM ETUDIANT WHERE VILLE_ET = 'MARSEILLE';
SELECT * FROM ETUDM;

/* WITH CHECK OPTION - PERMET DE FAIRE DES MODIFICATIONS SUR LES TABLES SOUS JACENTES AVEC LA VERIFICATION DES CONDITIONS DANS LE CAS OU UNE SEULE TABLE EST CONCERNEE */

/* EXO10 */
CREATE OR REPLACE VIEW PROF_INFO2 AS
    SELECT NUM_PROF, NOM_PROF, PRENOM_PROF 
    FROM PROF 
    WHERE NUM_PROF IN (
        SELECT DISTINCT NUM_PROF 
        FROM ENSEIGNT 
        WHERE NUM_ET IN (
            SELECT NUM_ET 
            FROM ETUDIANT 
            WHERE ANNEE = 2)
        )
    ;

/* EXO11 */
CREATE OR REPLACE VIEW DIS AS 
    SELECT *
    FROM MODULE 
    WHERE DISCIPLINE IN ('INFORMATIQUE', 'GESTION', 'MATHS')
WITH CHECK OPTION;

/*EXO12*/
CREATE OR REPLACE VIEW MODULE2 AS
    SELECT * 
    FROM MODULE M
    WHERE RESP IN (
        SELECT NUM_PROF 
        FROM ENSEIGNT 
        WHERE M.CODE = ENSEIGNT.CODE)
WITH CHECK OPTION;

/* EXO13 */
CREATE OR REPLACE VIEW ENSEIGNT2 AS
    SELECT * 
    FROM ENSEIGNT
    WHERE CODE IN (SELECT CODE FROM MODULE)
    AND NUM_PROF IN (SELECT NUM_PROF FROM PROF)
    AND NUM_ET IN (SELECT NUM_ET FROM ETUDIANT)
WITH CHECK OPTION;

/* EXO14 */
CREATE OR REPLACE VIEW MODULE2 AS
    SELECT * FROM MODULE
    WHERE CODE NOT IN (SELECT CODE FROM ENSEIGNT)
    AND CODE NOT IN (SELECT CODE FROM NOTATION)
    AND RESP NOT IN (SELECT NUM_PROF FROM PROF)
    AND CODEPERE NOT IN (SELECT CODE FROM MODULE)
WITH CHECK OPTION;

/* EXO15 */
GRANT SELECT ON ETUDIANT TO PUBLIC;

/* EXO16 */
SELECT * FROM ET2220.ETUDIANT WHERE VILLE_ET = 'MARSEILLE';

/* EXO17 */
GRANT SELECT,UPDATE,INSERT ON PROF TO ET2217;

SELECT * FROM ET2217.PROF;
INSERT INTO ET2217.PROF VALUES (420, 'BIN LADEN', 'OSAMA', NULL, NULL, 'LA MECQUE', 'BD');
COMMIT;

/* EXO18 */
DECLARE
    CURSOR modCursor IS SELECT CODE, LIBELLE FROM MODULE WHERE CODE NOT IN (SELECT CODEPERE FROM MODULE WHERE CODEPERE NOT NULL);
BEGIN
    FOR P IN modCursor
    LOOP
        DBMS_OUTPUT.PUT_LINE(P.CODE || ' ' || P.LIBELLE);
    END LOOP;
END;

/* VER 2 */
BEGIN
    FOR P IN (SELECT CODE, LIBELLE FROM MODULE WHERE CODE NOT IN (SELECT CODEPERE FROM MODULE WHERE CODEPERE NOT NULL))
    LOOP
        DBMS_OUTPUT.PUT_LINE(P.CODE || ', ' || P.LIBELLE);
    END LOOP;
END;

/* EXO19 */

